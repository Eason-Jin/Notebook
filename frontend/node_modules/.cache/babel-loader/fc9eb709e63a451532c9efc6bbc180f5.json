{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eason\\\\Desktop\\\\Code\\\\WDCC_DEVS\\\\Note\\\\frontend-workshop-2023\\\\src\\\\Components\\\\Note\\\\Note.js\";\nimport React from \"react\";\nimport \"./Note.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Note(_ref) {\n  let {\n    noteId,\n    noteTitle,\n    noteCategory,\n    noteMessage,\n    allNotes,\n    setAllNotes\n  } = _ref;\n\n  function deleteNote() {\n    console.log(noteId);\n    console.log(allNotes);\n    fetch(\"http://localhost:8000/notes?id=\" + noteId, {\n      method: \"DELETE\"\n    }).then(res => {\n      if (res.ok) {\n        // Create new array to store all notes except deleted note\n        const newAllNotes = []; // Add all notes to array except the deleted note\n\n        allNotes.map(note => {\n          if (note.title !== noteTitle && note.category !== noteCategory) {\n            newAllNotes.push(note);\n          }\n        }); // Update state variable that stores all notes to contain new array of notes\n\n        setAllNotes(newAllNotes);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"note-category\",\n      children: noteCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"note-title\",\n      children: noteTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"note-message\",\n      children: noteMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"del-button\",\n      onClick: deleteNote,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["C:/Users/eason/Desktop/Code/WDCC_DEVS/Note/frontend-workshop-2023/src/Components/Note/Note.js"],"names":["React","Note","noteId","noteTitle","noteCategory","noteMessage","allNotes","setAllNotes","deleteNote","console","log","fetch","method","then","res","ok","newAllNotes","map","note","title","category","push","catch","err","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,IAAT,OAAqF;AAAA,MAAvE;AAACC,IAAAA,MAAD;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA,QAA/C;AAAyDC,IAAAA;AAAzD,GAAuE;;AAEhG,WAASC,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAK,IAAAA,KAAK,CAAC,oCAAkCT,MAAnC,EAA2C;AAACU,MAAAA,MAAM,EAAC;AAAR,KAA3C,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACC,EAAP,EAAW;AACP;AACA,cAAMC,WAAW,GAAG,EAApB,CAFO,CAIP;;AACAV,QAAAA,QAAQ,CAACW,GAAT,CAAaC,IAAI,IAAI;AACjB,cAAIA,IAAI,CAACC,KAAL,KAAehB,SAAf,IAA4Be,IAAI,CAACE,QAAL,KAAkBhB,YAAlD,EAAgE;AAC5DY,YAAAA,WAAW,CAACK,IAAZ,CAAiBH,IAAjB;AACH;AACJ,SAJD,EALO,CAWP;;AACAX,QAAAA,WAAW,CAACS,WAAD,CAAX;AACH;AACJ,KAhBL,EAiBKM,KAjBL,CAiBWC,GAAG,IAAI;AACVd,MAAAA,OAAO,CAACe,KAAR,CAAcD,GAAd;AACH,KAnBL;AAoBH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAG,MAAA,EAAE,EAAC,eAAN;AAAA,gBAAuBnB;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,EAAE,EAAC,YAAN;AAAA,gBAAoBD;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,EAAE,EAAC,cAAN;AAAA,gBAAsBE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,OAAO,EAAEG,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;KAnCuBP,I","sourcesContent":["import React from \"react\";\r\nimport \"./Note.css\";\r\n\r\nexport default function Note({noteId, noteTitle, noteCategory, noteMessage, allNotes, setAllNotes}) {\r\n\r\n    function deleteNote() {\r\n        console.log(noteId)\r\n        console.log(allNotes)\r\n        fetch(\"http://localhost:8000/notes?id=\"+noteId, {method:\"DELETE\"})\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    // Create new array to store all notes except deleted note\r\n                    const newAllNotes = [];\r\n\r\n                    // Add all notes to array except the deleted note\r\n                    allNotes.map(note => {\r\n                        if (note.title !== noteTitle && note.category !== noteCategory) {\r\n                            newAllNotes.push(note);\r\n                        }\r\n                    })\r\n\r\n                    // Update state variable that stores all notes to contain new array of notes\r\n                    setAllNotes(newAllNotes);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <p id=\"note-category\">{noteCategory}</p>\r\n            <p id=\"note-title\">{noteTitle}</p>\r\n            <p id=\"note-message\">{noteMessage}</p>\r\n            <button id=\"del-button\" onClick={deleteNote}>Delete</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}